{"ast":null,"code":"import * as actionsTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\nconst initialState = {\n  ingredients: null,\n  totalPrice: 4,\n  error: false\n};\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionsTypes.ADD_INGREDIENT:\n      const updateIngredient = {\n        [action.ingredientName]: state.ingredients[action.ingredientName] + 1\n      };\n      const updateIngredients = updateObject(state.ingredients, updateIngredient);\n      const updatedState = {\n        ingredients: updateIngredients,\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\n      };\n      return updateObject(state, updatedState);\n\n    case actionsTypes.REMOVE_INGREDIENT:\n      const updateIng = {\n        [action.ingredientName]: state.ingredients[action.ingredientName] - 1\n      };\n      const updateIngs = updateObject(state.ingredients, updateIng);\n      const updatedSt = {\n        ingredients: updateIngs,\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\n      };\n      return updateObject(state, updatedSt);\n\n    case actionsTypes.SET_INGREDIENTS:\n      return updateObject(state, {\n        ingredients: action.ingredients,\n        error: false,\n        totalPrice: 4\n      });\n\n    case actionsTypes.FETCH_INGREDIENTS_FAILED:\n      return { ...state,\n        error: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/harsh/Documents/ReactJS/ReactJS-Burger-app/react-complete-guide--scripts-version/src/store/reducers/burgerBuilder.js"],"names":["actionsTypes","updateObject","initialState","ingredients","totalPrice","error","INGREDIENT_PRICES","salad","cheese","meat","bacon","reducer","state","action","type","ADD_INGREDIENT","updateIngredient","ingredientName","updateIngredients","updatedState","REMOVE_INGREDIENT","updateIng","updateIngs","updatedSt","SET_INGREDIENTS","FETCH_INGREDIENTS_FAILED"],"mappings":"AAAA,OAAO,KAAKA,YAAZ,MAA8B,wBAA9B;AACA,SAASC,YAAT,QAA6B,YAA7B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,WAAW,EAAE,IADI;AAEjBC,EAAAA,UAAU,EAAE,CAFK;AAGjBC,EAAAA,KAAK,EAAE;AAHU,CAArB;AAMA,MAAMC,iBAAiB,GAAG;AACtBC,EAAAA,KAAK,EAAE,GADe;AAEtBC,EAAAA,MAAM,EAAE,GAFc;AAGtBC,EAAAA,IAAI,EAAE,GAHgB;AAItBC,EAAAA,KAAK,EAAE;AAJe,CAA1B;;AAOA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGV,YAAT,EAAuBW,MAAvB,KAAkC;AAC9C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKd,YAAY,CAACe,cAAlB;AACI,YAAMC,gBAAgB,GAAG;AAAC,SAACH,MAAM,CAACI,cAAR,GAAyBL,KAAK,CAACT,WAAN,CAAkBU,MAAM,CAACI,cAAzB,IAA2C;AAArE,OAAzB;AACA,YAAMC,iBAAiB,GAAGjB,YAAY,CAACW,KAAK,CAACT,WAAP,EAAoBa,gBAApB,CAAtC;AACA,YAAMG,YAAY,GAAG;AACjBhB,QAAAA,WAAW,EAAEe,iBADI;AAEjBd,QAAAA,UAAU,EAAEQ,KAAK,CAACR,UAAN,GAAmBE,iBAAiB,CAACO,MAAM,CAACI,cAAR;AAF/B,OAArB;AAIA,aAAOhB,YAAY,CAACW,KAAD,EAAQO,YAAR,CAAnB;;AACJ,SAAKnB,YAAY,CAACoB,iBAAlB;AACI,YAAMC,SAAS,GAAG;AAAC,SAACR,MAAM,CAACI,cAAR,GAAyBL,KAAK,CAACT,WAAN,CAAkBU,MAAM,CAACI,cAAzB,IAA2C;AAArE,OAAlB;AACA,YAAMK,UAAU,GAAGrB,YAAY,CAACW,KAAK,CAACT,WAAP,EAAoBkB,SAApB,CAA/B;AACA,YAAME,SAAS,GAAG;AACdpB,QAAAA,WAAW,EAAEmB,UADC;AAEdlB,QAAAA,UAAU,EAAEQ,KAAK,CAACR,UAAN,GAAmBE,iBAAiB,CAACO,MAAM,CAACI,cAAR;AAFlC,OAAlB;AAIA,aAAOhB,YAAY,CAACW,KAAD,EAAQW,SAAR,CAAnB;;AACJ,SAAKvB,YAAY,CAACwB,eAAlB;AACI,aAAOvB,YAAY,CAACW,KAAD,EAAQ;AACvBT,QAAAA,WAAW,EAAEU,MAAM,CAACV,WADG;AAEvBE,QAAAA,KAAK,EAAE,KAFgB;AAGvBD,QAAAA,UAAU,EAAE;AAHW,OAAR,CAAnB;;AAMJ,SAAKJ,YAAY,CAACyB,wBAAlB;AACI,aAAM,EACF,GAAGb,KADD;AAEFP,QAAAA,KAAK,EAAE;AAFL,OAAN;;AAIJ;AACI,aAAOO,KAAP;AA9BR;AAgCH,CAjCD;;AAmCA,eAAeD,OAAf","sourcesContent":["import * as actionsTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../utility';\r\n\r\nconst initialState = {\r\n    ingredients: null,\r\n    totalPrice: 4,\r\n    error: false\r\n};\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.7\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case actionsTypes.ADD_INGREDIENT:\r\n            const updateIngredient = {[action.ingredientName]: state.ingredients[action.ingredientName] + 1};\r\n            const updateIngredients = updateObject(state.ingredients, updateIngredient);\r\n            const updatedState = {\r\n                ingredients: updateIngredients,\r\n                totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\r\n            }\r\n            return updateObject(state, updatedState);\r\n        case actionsTypes.REMOVE_INGREDIENT:\r\n            const updateIng = {[action.ingredientName]: state.ingredients[action.ingredientName] - 1};\r\n            const updateIngs = updateObject(state.ingredients, updateIng);\r\n            const updatedSt = {\r\n                ingredients: updateIngs,\r\n                totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\r\n            }\r\n            return updateObject(state, updatedSt);\r\n        case actionsTypes.SET_INGREDIENTS:\r\n            return updateObject(state, {\r\n                ingredients: action.ingredients,\r\n                error: false,\r\n                totalPrice: 4\r\n            });\r\n            \r\n        case actionsTypes.FETCH_INGREDIENTS_FAILED:\r\n            return{\r\n                ...state,\r\n                error: true\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}