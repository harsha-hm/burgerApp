{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\harsh\\\\Documents\\\\ReactJS\\\\ReactJS-Burger-app\\\\react-complete-guide--scripts-version\\\\src\\\\containers\\\\BurgerBuilder\\\\BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport axios from '../../axios-orders';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport { connect } from 'react-redux';\nimport * as actionTypes from '../../store/actions';\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      totalPrice: 4,\n      purchasable: false,\n      purchasing: false,\n      loading: false\n    };\n\n    this.addIngredientsHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updatedCount = oldCount + 1;\n      const updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] = updatedCount;\n      const priceAddition = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice + priceAddition;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.removeIngredientsHandler = type => {\n      const oldCount = this.state.ingredients[type];\n\n      if (oldCount <= 0) {\n        return;\n      }\n\n      const updatedCount = oldCount - 1;\n      const updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] = updatedCount;\n      const priceDeduction = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice - priceDeduction;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.purchaseHandler = () => {\n      this.setState({\n        purchasing: true\n      });\n    };\n\n    this.purchaseCancelHandler = () => {\n      this.setState({\n        purchasing: false\n      });\n    };\n\n    this.purchaseContinueHandler = () => {\n      const queryParams = [];\n\n      for (let i in this.state.ingredients) {\n        queryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.state.ingredients[i]));\n      }\n\n      queryParams.push('price=' + this.state.totalPrice);\n      const queryString = queryParams.join('&');\n      this.props.history.push({\n        pathname: '/checkout',\n        search: '?' + queryString\n      });\n    };\n  }\n\n  componentDidMount() {// axios.get('https://my-react-burger-4bf40.firebaseio.com/ingredients.json')\n    //     .then(response => {\n    //         this.setState({ingredients: response.data});\n    //     })\n    //     .catch(error => {\n    //         this.setState({ error: true});\n    //     });\n  }\n\n  updatePurchaseState(ingredients) {\n    const sum = Object.keys(ingredients).map(igKey => {\n      return ingredients[igKey];\n    }).reduce((sum, el) => {\n      return sum + el;\n    }, 0);\n    this.setState({\n      purchasable: sum > 0\n    });\n  }\n\n  render() {\n    const disabledInfo = { ...this.props.ings\n    };\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    let orderSummary = null;\n    let burger = /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 22\n      }\n    });\n\n    if (this.props.ings) {\n      burger = /*#__PURE__*/React.createElement(Aux, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Burger, {\n        ingredients: this.props.ings,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(BuildControls, {\n        ingredientsAdded: this.props.onIngredientAdded,\n        ingredientsRemoved: this.props.onIngredientRemoved,\n        disabled: disabledInfo,\n        purchasable: this.state.purchasable,\n        ordered: this.purchaseHandler,\n        price: this.state.totalPrice,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }\n      }));\n      orderSummary = /*#__PURE__*/React.createElement(OrderSummary, {\n        ingredients: this.props.ings,\n        price: this.state.totalPrice,\n        purchaseCancelled: this.purchaseCancelHandler,\n        purchaseContinued: this.purchaseContinueHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 28\n        }\n      });\n    }\n\n    if (this.state.loading) {\n      orderSummary = /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 28\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(Aux, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.purchasing,\n      modalClosed: this.purchaseCancelHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    }, orderSummary), burger);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    ings: state.ingredients\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onIngredientAdded: ingName => dispatch({\n      type: actionTypes.ADD_INGREDIENT,\n      ingredientName: ingName\n    }),\n    onIngredientRemoved: ingName => dispatch({\n      type: actionTypes.REMOVE_INGREDIENT,\n      ingredientName: ingName\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));","map":{"version":3,"sources":["C:/Users/harsh/Documents/ReactJS/ReactJS-Burger-app/react-complete-guide--scripts-version/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Aux","Burger","BuildControls","Modal","OrderSummary","axios","Spinner","withErrorHandler","connect","actionTypes","BurgerBuilder","state","totalPrice","purchasable","purchasing","loading","addIngredientsHandler","type","oldCount","ingredients","updatedCount","updatedIngredients","priceAddition","INGREDIENT_PRICES","oldPrice","newPrice","setState","updatePurchaseState","removeIngredientsHandler","priceDeduction","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","queryParams","i","push","encodeURIComponent","queryString","join","props","history","pathname","search","componentDidMount","sum","Object","keys","map","igKey","reduce","el","render","disabledInfo","ings","key","orderSummary","burger","onIngredientAdded","onIngredientRemoved","mapStateToProps","mapDispatchToProps","dispatch","ingName","ADD_INGREDIENT","ingredientName","REMOVE_INGREDIENT"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Aux from '../../hoc/Aux';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\nimport axios from '../../axios-orders';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport { connect } from 'react-redux';\r\nimport * as actionTypes from '../../store/actions';\r\n\r\nclass BurgerBuilder extends Component {\r\n\r\n    state = {\r\n        totalPrice: 4,\r\n        purchasable: false,\r\n        purchasing: false,\r\n        loading: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        // axios.get('https://my-react-burger-4bf40.firebaseio.com/ingredients.json')\r\n        //     .then(response => {\r\n        //         this.setState({ingredients: response.data});\r\n        //     })\r\n        //     .catch(error => {\r\n        //         this.setState({ error: true});\r\n        //     });\r\n    }\r\n\r\n\r\n    updatePurchaseState (ingredients) {\r\n        const sum = Object.keys(ingredients)\r\n            .map(igKey => {\r\n                return ingredients[igKey];\r\n            })\r\n            .reduce( ( sum, el ) => {\r\n                return sum + el;\r\n            }, 0 );\r\n        this.setState({purchasable:sum > 0});\r\n    }\r\n\r\n    addIngredientsHandler = (type) => {\r\n        const oldCount = this.state.ingredients[type];\r\n        const updatedCount = oldCount + 1;\r\n        const updatedIngredients = {\r\n            ...this.state.ingredients\r\n        }\r\n        updatedIngredients[type] = updatedCount;\r\n        const priceAddition =INGREDIENT_PRICES[type];\r\n        const oldPrice = this.state.totalPrice;\r\n        const newPrice = oldPrice + priceAddition;\r\n\r\n        this.setState({totalPrice: newPrice, ingredients: updatedIngredients});\r\n        this.updatePurchaseState(updatedIngredients);\r\n    }\r\n\r\n    removeIngredientsHandler = (type => {\r\n        const oldCount = this.state.ingredients[type];\r\n        if (oldCount <= 0) {\r\n            return;\r\n        }\r\n        const updatedCount = oldCount - 1;\r\n        const updatedIngredients = {\r\n            ...this.state.ingredients\r\n        }\r\n        updatedIngredients[type] = updatedCount;\r\n        const priceDeduction =INGREDIENT_PRICES[type];\r\n        const oldPrice = this.state.totalPrice;\r\n        const newPrice = oldPrice - priceDeduction;\r\n\r\n        this.setState({totalPrice: newPrice, ingredients: updatedIngredients});\r\n        this.updatePurchaseState(updatedIngredients);\r\n    })\r\n\r\n    purchaseHandler = () => {\r\n        this.setState({purchasing: true});\r\n    }\r\n\r\n    purchaseCancelHandler = () => {\r\n        this.setState({purchasing: false});\r\n    }\r\n\r\n    purchaseContinueHandler = () => {\r\n        const queryParams = [];\r\n        for ( let i in this.state.ingredients) {\r\n            queryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.state.ingredients[i]));\r\n        }\r\n        queryParams.push('price=' + this.state.totalPrice);\r\n        const queryString = queryParams.join('&');\r\n        this.props.history.push({\r\n            pathname: '/checkout',\r\n            search: '?' + queryString\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const disabledInfo = {\r\n            ...this.props.ings\r\n        }\r\n        for ( let key in disabledInfo ) {\r\n            disabledInfo[key] = disabledInfo[key] <= 0\r\n        }\r\n\r\n        let orderSummary = null;\r\n        let burger = <Spinner />;\r\n\r\n        if (this.props.ings) {\r\n            burger = (\r\n                <Aux>\r\n                    <Burger ingredients = {this.props.ings} />\r\n                    <BuildControls \r\n                        ingredientsAdded={this.props.onIngredientAdded}\r\n                        ingredientsRemoved={this.props.onIngredientRemoved}\r\n                        disabled={disabledInfo}\r\n                        purchasable={this.state.purchasable}\r\n                        ordered={this.purchaseHandler}\r\n                        price={this.state.totalPrice} />\r\n                </Aux>\r\n            );\r\n            orderSummary = <OrderSummary \r\n                ingredients={this.props.ings}\r\n                price={this.state.totalPrice}\r\n                purchaseCancelled={this.purchaseCancelHandler}\r\n                purchaseContinued={this.purchaseContinueHandler} />;\r\n        }\r\n\r\n        if (this.state.loading) {\r\n            orderSummary = <Spinner />;\r\n        }\r\n \r\n        return (\r\n            <Aux>\r\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\r\n                    {orderSummary}\r\n                </Modal>\r\n                {burger}\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.ingredients\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onIngredientAdded: (ingName) => dispatch({ type: actionTypes.ADD_INGREDIENT, ingredientName: ingName, }),\r\n        onIngredientRemoved: (ingName) => dispatch({ type: actionTypes.REMOVE_INGREDIENT, ingredientName: ingName, })\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));\r\n"]},"metadata":{},"sourceType":"module"}